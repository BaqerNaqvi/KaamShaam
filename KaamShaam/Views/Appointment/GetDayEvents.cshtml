@{
    string baseUrl = Request.Url.Scheme + "://" + Request.Url.Authority +
                     Request.ApplicationPath.TrimEnd('/');

}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.css" />
<style>
        .ui-autocomplete {
  z-index:2147483647;
}
    li {
    list-style: none;
}
</style>
@using Microsoft.AspNet.Identity
@model KaamShaam.Models.DayAppointmentModel
<!--************************************
        Inner Page Banner Start
*************************************-->
<div class="tg-innerpagebanner">
    <div class="container">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="tg-pagetitle">
                    <h1><a href="~/Appointment/Upcoming">Back To Appointments</a></h1>
                </div>
                <ol class="tg-breadcrumb">
                    <li><a href="~/home/index">Home</a></li>
                    <li class="tg-active"><a href="~/Appointment/Upcoming">Appointments</a></li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!--************************************
        Inner Page Banner End
*************************************-->
<!--************************************
        Main Start
*************************************-->
<main id="tg-main" class="tg-main tg-haslayout">
    <div class="container">
        <div class="row">
            <div id="tg-twocolumns" class="tg-twocolumns">
                @{ Html.RenderPartial("LeftMenu");}
                <div class="col-xs-12 col-sm-7 col-md-8 col-lg-9">
                    <div id="tg-content" class="tg-content">
                        <div class="tg-dashboard tg-dashboardappointmentsetting">
                            <form class="tg-themeform">
                                <fieldset>
                                    <div class="tg-dashboardbox tg-dashboardappointments">
                                        <div class="tg-dashboardtitle">
                                            @{
                                                <span>@Model.DateName</span>
                                                if (Model != null && Model.Appoinments != null)
                                                {
                                                    <h2 id="appH">Your Appointments</h2>
                                                    <img class="ajaxloader" id="adminLoading" src="~/Images/ajax-loader.gif" style="margin-left: 14px;"/>
                                                }
                                                else
                                                {
                                                    <h6 id="noappH" style="padding-left: 35%; color: red">(You have no appointments in the date)</h6>
                                                }

                                            }
                                        </div>

                                        <div class="tg-dashboardappointmentbox">
                                            @{
                                                var loggedInuserid= System.Web.HttpContext.Current.User.Identity.GetUserId();
                                                if (Model != null && Model.Appoinments != null)
                                                {
                                                    foreach (var item in Model.Appoinments.ToList())
                                                    {
                                                        var withname = item.WithName;
                                                        var modelopen = "#addnewevent";
                                                        if (loggedInuserid != item.CreatedBy)
                                                        {
                                                            withname = item.CreatedByName;
                                                            modelopen = "";
                                                        }
                                                        <div class="tg-dashboardappointment" data-toggle="modal" data-target="@modelopen" id="tr_@item.Id" @modelopen onclick="appClicked(@Json.Encode(item))">
                                                            <div class="tg-servicetitle">
                                                                <figure>
                                                                    <img src="@baseUrl/images/contractor-dashboard/small.jpg" alt="image description">
                                                                </figure>
                                                                <div class="tg-clientcontent">
                                                                    <h2><a href="javascript:void(0);">@withname</a>
                                                                    </h2>
                                                                    <span>@item.Title</span>
                                                                </div>
                                                            </div>
                                                            @*<div class="tg-serviceandservicetype">
                                                            <span>@item.DateTime.ToShortTimeString()</span>
                                                        </div>*@
                                                            <div class="tg-btntimeedit">
                                                                <div class="tg-appointmenttype">
                                                                    <h3>@item.Type</h3>
                                                                    <span>@item.DateTime.ToShortTimeString()</span>
                                                                </div>
                                                                <a onclick="appAttended(@Json.Encode(item)) " href="#" class="tg-btnedite" data-toggle="modal" data-target=".tg-categoryModal"><i class="lnr lnr-checkmark-circle"></i></a>
                                                                <a onclick="AppDeleted(@Json.Encode(item)) " href="#" class="tg-btndel" data-toggle="modal" data-target=".tg-appointmentrejectmodal"><i class="lnr lnr-cross-circle"></i></a>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            }
                                        </div>
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<!-- basic info -->
<div class="modal fade" id="addnewevent" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h3 class="modal-title">Appointment Details</h3>
            </div>
            <div class="modal-body" style="height:375px; padding: 4%;">

                <!-- content goes here -->
                <div class="form-group">
                    <label> Title & Description <span style="color: red">*</span></label>
                    <input type="text" class="form-control editJobVal" id="eventTitle">
                </div>
                <div class="form-group">
                    <label> Appointment Type <span style="color: red">*</span></label>
                    <select id="appType" class="form-control">
                        <option value="General">General</option>
                        <option value="Business">Business</option>
                        <option value="Meeting">Meeting</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Date/Time <span style="color: red">*</span></label>
                    <div class='input-group date' id='datetimepicker1'>
                        <input type='text' class="form-control" data-format="yyyy-MM-dd hh:mm:ss" onclick="calClickObj(true)"/>
                        <span class="input-group-addon" onclick="calClickObj(false)"id="tempoCal">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="form-group" style="width: 92%;">
                    <label>Appointment With </label>
                    <input type="text" id="appwith" class="typeahead tt-query" autocomplete="off" spellcheck="false">
                </div>
            </div>
            <div class="modal-footer">
                <div class="btn-group btn-group-justified" role="group" aria-label="group button">
                    <div class="btn-group" role="group">
                        <button onclick="editEvent()" id="suspendBtn" type="button" class="btn btn-primary">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--************************************
        Main End
*************************************-->
<!--************************************
        Footer Start
*************************************-->
<script src="~/Scripts/vendor/jquery-library.js"></script>
<script src="~/Scripts/moment.js"></script>
<script src="~/Scripts/fullcal.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.js"></script>
<script>
   $('#adminLoading').hide();
    function appAttended(obj) {
        objtoedit = obj;
        obj.IsAttended = true;
        obj.DateTime= new Date(parseInt(obj.DateTime.substr(6)));
        postMydata(obj, 'Update', success_Handler);
    }
    function AppDeleted(obj) {
        objtoedit = obj;
        postMydata(obj, 'Delete', success_Handler);
    }
    var objtoedit;
    var objects = [];
    var map = {};
    var withId = "";

    function postMydata(serverObj, url, successFunc) {
        $('#adminLoading').show();
        $.ajax({
            url: url,
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify(serverObj),
            success: successFunc,
            error: function (data) {
                $('#adminLoading').hide();
                toastr.error("Job failed to update");
            }
        });
    }
    function success_Handler(data) {
        toastr.success("Success");
        $("#tr_" + objtoedit.Id).remove();
        hideModel("addnewevent");
    }
    function success_edit(data) {
        toastr.success("Success");
        hideModel("addnewevent");
        setTimeout(function () {
            location.reload();
        }, 1000);
    }
    function appClicked(obj) {
        $('#adminLoading').hide();
        var dd= new Date(parseInt(obj.DateTime.substr(6)));
        objtoedit = obj;
        $("#eventTitle").val(obj.Title);
        $("#appType").val(obj.Type);
        withId = obj.WithId;
        $("#appwith").val(obj.WithName);
        $('#datetimepicker1').datetimepicker({
            format: 'YYYY-MM-DD HH:mm:ss',
            date:dd
        });
        $('#appwith').typeahead({
            source: function (query, process) {
                return $.getJSON(
                    'GetSuggestions',
                    { query: query },
                    function (data) {
                        $('#adminLoading').hide();
                        objects = [];
                        map = {};
                        $.each(data, function (i, object) {
                            map[object.label] = object;
                            objects.push(object.label);
                        });
                        process(objects);
                    });
            }
           ,
            updater: function (item) {
                $('#adminLoading').hide();
                withId = (map[item].id);
                return item;
            }
        }).on('keyup', this, function (event) {
            $('#adminLoading').show();
        });
    }
    function editEvent() {

        var text = $('#eventTitle').val();
        var dobj = $("#datetimepicker1").find("input").val();
        if (text === "" || dobj === "") {
            toastr.error("Enter mandatory data marked with '*'");
            return false;
        }
        $('#adminLoading').show();

        var dates = dobj.split(' ');
        var newval = dates[0] + "T" + dates[1];
        var server = {};
        server.Title = text;
        server.Type = $("#appType").val();
        server.WithId = withId;
        server.DateTime = new Date(dobj);
        server.Id = objtoedit.Id;

        postMydata(server, 'Update', success_edit);

    }
   $(document).ready(function() {
     
   });

   function calClickObj(is) {
       if (is) {
           $('#tempoCal').trigger( "click" );  
       }
   }
</script>