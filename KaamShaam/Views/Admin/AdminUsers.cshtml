
@using Microsoft.AspNet.Identity
@model List<KaamShaam.AdminModels.LocalUser>
<style>
    .displayNone {
        display: none
    }
</style>
<script src="~/Scripts/jquery.js"></script>
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div id="page-wrapper">
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">
                    Administrative Users
                </h1>
                <ol class="breadcrumb" style="margin-bottom: 8px;">
                    <li>
                        <i class="fa fa-dashboard"></i> <a href="~/Admin/Stats">Dashboard</a>
                    </li>
                    <li class="active">
                        <i class="fa fa-table"></i> Admin Management
                    </li>
                </ol>
                <div>
                    @*<button id="tempo" class="btn btn-primary" style="margin-bottom: 9px;float: right;" data-toggle="modal" data-target="#addAdmin" onclick="addNewAdmin()">Add New Admin</button>*@
                </div>
            </div>
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-12">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover table-striped">
                        <thead>
                            <tr>
                                <th class="col-lg-6">Name</th>
                                <th class="col-lg-2">Role</th>
                                <th class="col-lg-2">Status</th>
                                <th class="col-lg-2">&nbsp;</th>
                            </tr>
                        </thead>
                        <tbody>
                        @{
                            var userId = System.Web.HttpContext.Current.User.Identity.GetUserId();
                            if (Model != null)
                            {
                                foreach (var item in Model)
                                {
                                    var isDisabled = "";
                                    if (userId == item.Id)
                                    {
                                        isDisabled = "disabled='disabled";
                                    }
                                    var status = "";
                                    if (item.Status)
                                    {
                                        status = "checked";
                                    }
                                        <tr>
                                            <td>@item.FullName</td>
                                            <td>@item.RoleName</td>
                                            <td><input onchange="changeStatus(@Json.Encode(item))" @isDisabled id='tg_@item.Id' class="cattoggle" type="checkbox" @status data-toggle="toggle"></td>
                                            <td><button class="btn btn-default" data-toggle="modal" @isDisabled data-target="#editAdmin" onclick="EditAdmin(@Json.Encode(item)) ">Edit</button></td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</div>




<!-- add admin -->
<div class="modal fade" id="addAdmin" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h3 class="modal-title" id="lineModalLabel">Add Admin</h3>
            </div>
            <div class="modal-body">

                <!-- content goes here -->
                <div class="form-group">
                    <label for="" style="display: table-row;">User Email:</label>
                    <input placeholder="Email of User you want to add as admin" type="email" class="form-control catNameVal" id="NewuserEmail" style="display: inline-block; width: 65%;">
                    <input type="button" class="btn btn-default" value="Find" style="margin-top: -2px; display: inline-block;" onclick=" FindUser() "/>
                    <img class="displayNone" src="~/Images/ajax-loader.gif" id="adminLoading"/>
                    <img class="displayNone" src="~/Images/tic.png" id="adminFound"/>
                    <img class="displayNone" src="~/Images/cross.png" id="adminNotFound"/>
                </div>
                <div class="form-group">
                    <label for="catName">Admin Type:</label>
                    <select class="form-control" id="adminTypeDd">
                        <option value="Admin">Admin</option>
                        <option value="Super Admin">Super Admin</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <div class="btn-group btn-group-justified" role="group" aria-label="group button">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-default" data-dismiss="modal" role="button">Close</button>
                    </div>

                    <div class="btn-group" role="group">
                        <button type="button" id="updateUser" class="btn btn-primary btn-hover-green" data-action="save" role="button" disabled="" onclick=" AddUserToRole() ">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editAdmin" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h3 class="modal-title" id="">Edit Admin</h3>
            </div>
            <div class="modal-body">

                <!-- content goes here -->
                <div class="form-group">
                    <label for="">Name:</label>
                    <input type="text" class="form-control" id="adminNameTt" disabled=""/>
                </div>

                <div class="form-group">
                    <label for="">Admin Type:</label>
                    <select class="form-control" id="adminTypeDdedit">
                        <option value="Admin">Admin</option>
                        <option value="Super Admin">Super Admin</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <div class="btn-group btn-group-justified" role="group" aria-label="group button">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="removeFromRole()" role="button">Remove</button>
                    </div>

                    <div class="btn-group" role="group">
                        <button type="button" id="" class="btn btn-primary btn-hover-green" data-action="save" role="button" onclick="UpdateAdminSave()">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery.js"></script>
<script src="~/Scripts/Common.js"></script>

<script>
    var admintoedit = undefined;
    $("#admin-li").addClass('active');
    var tempoObj;
    

    function addNewAdmin() {
        $('#NewuserEmail').val('');
        $("#adminLoading").hide();
        $("#adminFound").hide();
        $("#adminNotFound").hide();
    }


    function FindUser() {
        var email = $('#NewuserEmail').val();
        if (email === "" || email == undefined) {
            toastr.error("Please search person by email first");
            return;
        }
        $("#adminLoading").show();
        $("#adminFound").hide();
        $("#adminNotFound").hide();

        $.ajax({
            url: 'FindUserByEmail',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Email: email }),
            success: function (data) {
                $("#adminLoading").hide();
                if (data !== true) {
                    $("#adminFound").show();
                    document.getElementById("updateUser").disabled = false;
                    var dataFound = data.FullName + " [ " + data.Email + " ]";
                    $('#NewuserEmail').val(dataFound);
                    $('#NewuserEmail').data('userId', data.Id);
                }            
                else{
                    $("#adminNotFound").show();
                    document.getElementById("updateUser").disabled = true;
                }
            },
            error: function(data) {
                $("#adminLoading").hide();
            }
        });
    }

    function AddUserToRole() {
        var adminType = $('#adminTypeDd').val();
        var userId = $('#NewuserEmail').data('userId');
        if (userId === "" || userId == undefined) {
            toastr.error("Please search person by email first");
            return;
        }


        $.ajax({
            url: 'AddUserInRole',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Role: adminType, Id: userId }),
            success: function (data) {
                toastr.success("User added to role");
                hideModel('addAdmin');
                setTimeout(function () {
                    location.reload();
                }, 1000);
            },
            error: function (data) {
                $("#adminLoading").hide();
            }
        });
    }


    function EditAdmin(obj) {
        $('#adminNameTt').val(obj.FullName);
        $('#adminTypeDdedit').val(obj.RoleName);
        admintoedit = obj;
    }

    function removeFromRole() {
        $.ajax({
            url: 'RemoveFromRole',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Id: admintoedit.Id, Role: admintoedit.RoleName }),
            success: function (data) {
                hideModel('editAdmin');
                setTimeout(function () {
                    location.reload();
                }, 1000);
            },
            error: function (data) {
            }
        });
    }

    function UpdateAdminSave() {
        $.ajax({
            url: 'AddUserInRole',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Role: $('#adminTypeDdedit').val(), Id: admintoedit.Id }),
            success: function (data) {
                toastr.success("User added to role");
                hideModel('editAdmin');
                setTimeout(function () {
                    location.reload();
                }, 1000);
            },
            error: function (data) {
                $("#adminLoading").hide();
            }
        });
    }

    function changeStatus(obj) {
        obj.Status = !obj.Status;
        $.ajax({
            url: '../User/UpdateStatus',
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Id: obj.Id, Status: obj.Status }),
            success: function (data) {
                toastr.success("Status updated");
                setTimeout(function () {
                    location.reload();
                }, 1000);
            },
            error: function (data) { }
        });
    }
</script>
